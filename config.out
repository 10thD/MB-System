checking for g++... g++
checking whether the C++ compiler works... yes
checking for C++ compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C++ compiler... yes
checking whether g++ accepts -g... yes
checking whether g++ supports C++11 features with -std=gnu++11... yes
checking build system type... x86_64-apple-darwin18.7.0
checking host system type... x86_64-apple-darwin18.7.0
 
------------------------------------------------------------------------------
    The MB-system:    configure    12/7/2011
 
    Copyright (c) 2011-2020 by
    D. W. Caress (caress@lamont.ldgo.columbia.edu)
    and D. N. Chayes (dale@lamont.ldgo.columbia.edu)
    Lamont-Doherty Earth Observatory
    Palisades, NY  10964
 
    See README file for copying and redistribution conditions.
------------------------------------------------------------------------------
 
    The initial version of the MB-System autoconf-based build system
    was contributed by Bob Covill on 7 December 2011. Further
    refinement of the build system involved contributions from
    Bob Covill, Kurt Schwehr, Hamish Bowman, David Caress, and
    Christian Ferreira.
 
------------------------------------------------------------------------------
    To modify this build system...
------------------------------------------------------------------------------
 
    Edit the file configure.ac in the top directory and the files
    Makefile.am in each directory under src. Then run the following sequence
    of commands:
 
        # Build libtool files for LT_INIT[]
        libtoolize --force --copy
        aclocal
 
        # Build custom header for configure[]
        autoheader
        automake --add-missing --include-deps
        autoconf
 
        # To update configure files use the following:[]
        autoupdate
        autoreconf --force --install --warnings=all
 
    When you run ./configure, a number of configure options are saved to a
    header file:
        ./src/mbio/mb_config.h
    This file has a template:
        ./src/mbio/mb_config.h.in
    This file is conditionally included by:
        ./src/mbio/mb_define.h
    which is in turn included by almost every MB-System C source file.
 
------------------------------------------------------------------------------
    To use the build system...
------------------------------------------------------------------------------
    To generate the makefiles needed to build MB-System, run ./configure
    with the options appropriate for your situation. These options are
    listed here:
        --prefix=install      - location for mbsystem (/usr/local/mbsystem)
        --with-netcdf-config  - location of NetCDF config script nc-config
        --with-gdal-config    - location of GDAL config script gdal-config
        --with-gmt-config     - location of GMT config script gmt-config
        --with-proj-lib       - location of PROJ libs
        --with-proj-include   - location of PROJ headers
        --with-fftw-lib       - location of FFTW3 libs (optional)
        --with-fftw-include   - location of FFTW3 headers (optional)
        --with-motif-lib      - location of Motif libs (optional)
        --with-motif-include  - location of Motif headers (optional)
        --with-opengl-lib     - location of OpenGL libs (optional)
        --with-opengl-include - location of OpenGL headers (optional)
        --with-otps-dir       - location of OTPS installation (optional)
        --enable-mbtrn        - enable building terrain relative navigation (TRN) tools (optional)
        --enable-mbtnav       - enable building terrain relative navigation (TRN) tools (optional)
        --disable-mbtools     - disable building graphical tools (use with --enable-mbtrn and --enable-mbtnav)
        --enable-hardening    - Enable compiler and linker options to frustrate memory corruption exploits  (e.g. -fPIE and -pie) (optional)
        --enable-test         - Enable building unit tests in test/ and third-party/
 
    After configure you can run the make utility in the usual fashion
        make
        make install
 
    Some other useful make commands include: 
        make clean (to clean up compiled code)
        make distclean (to clean up compiled code and configure output)
        make uninstall (to remove a previously installed version)
------------------------------------------------------------------------------
 
Configure will now attempt to construct the Makefiles required to build MB-System
MB-System Version 5.7.6beta32
HOST System Type: x86_64-apple-darwin18.7.0
 
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... ./install-sh -c -d
checking for gawk... no
checking for mawk... no
checking for nawk... no
checking for awk... awk
checking whether make sets $(MAKE)... yes
checking whether make supports the include directive... yes (GNU style)
checking whether make supports nested variables... yes
checking dependency style of g++ -std=gnu++11... gcc3
checking whether to enable maintainer-specific portions of Makefiles... no
checking for gcc... gcc
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking whether gcc understands -c and -o together... yes
checking dependency style of gcc... gcc3
checking for gcc option to accept ISO C99... none needed
checking for gcc option to accept ISO Standard C... (cached) none needed
checking whether we are using the GNU C++ compiler... (cached) yes
checking whether g++ -std=gnu++11 accepts -g... (cached) yes
checking dependency style of gcc... gcc3
checking for ar... ar
checking the archiver (ar) interface... ar
checking whether ln -s works... yes
checking whether make sets $(MAKE)... (cached) yes
checking how to print strings... printf
checking for a sed that does not truncate output... /usr/bin/sed
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking for fgrep... /usr/bin/grep -F
checking for ld used by gcc... /Applications/Xcode-10.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
checking if the linker (/Applications/Xcode-10.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld) is GNU ld... no
checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
checking the name lister (/usr/bin/nm -B) interface... BSD nm
checking the maximum length of command line arguments... 196608
checking how to convert x86_64-apple-darwin18.7.0 file names to x86_64-apple-darwin18.7.0 format... func_convert_file_noop
checking how to convert x86_64-apple-darwin18.7.0 file names to toolchain format... func_convert_file_noop
checking for /Applications/Xcode-10.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld option to reload object files... -r
checking for objdump... objdump
checking how to recognize dependent libraries... pass_all
checking for dlltool... no
checking how to associate runtime and link libraries... printf %s\n
checking for archiver @FILE support... no
checking for strip... strip
checking for ranlib... ranlib
checking command to parse /usr/bin/nm -B output from gcc object... ok
checking for sysroot... no
checking for a working dd... /bin/dd
checking how to truncate binary pipes... /bin/dd bs=4096 count=1
checking for mt... no
checking if : is a manifest tool... no
checking for dsymutil... dsymutil
checking for nmedit... nmedit
checking for lipo... lipo
checking for otool... otool
checking for otool64... no
checking for -single_module linker flag... yes
checking for -exported_symbols_list linker flag... yes
checking for -force_load linker flag... yes
checking how to run the C preprocessor... gcc -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking for dlfcn.h... yes
checking for objdir... .libs
checking if gcc supports -fno-rtti -fno-exceptions... yes
checking for gcc option to produce PIC... -fno-common -DPIC
checking if gcc PIC flag -fno-common -DPIC works... yes
checking if gcc static flag -static works... no
checking if gcc supports -c -o file.o... yes
checking if gcc supports -c -o file.o... (cached) yes
checking whether the gcc linker (/Applications/Xcode-10.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld) supports shared libraries... yes
checking dynamic linker characteristics... darwin18.7.0 dyld
checking how to hardcode library paths into programs... immediate
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking how to run the C++ preprocessor... g++ -std=gnu++11 -E
checking for ld used by g++ -std=gnu++11... /Applications/Xcode-10.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
checking if the linker (/Applications/Xcode-10.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld) is GNU ld... no
checking whether the g++ -std=gnu++11 linker (/Applications/Xcode-10.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld) supports shared libraries... yes
checking for g++ -std=gnu++11 option to produce PIC... -fno-common -DPIC
checking if g++ -std=gnu++11 PIC flag -fno-common -DPIC works... yes
checking if g++ -std=gnu++11 static flag -static works... no
checking if g++ -std=gnu++11 supports -c -o file.o... yes
checking if g++ -std=gnu++11 supports -c -o file.o... (cached) yes
checking whether the g++ -std=gnu++11 linker (/Applications/Xcode-10.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld) supports shared libraries... yes
checking dynamic linker characteristics... darwin18.7.0 dyld
checking how to hardcode library paths into programs... immediate
checking for a Python interpreter with version >= 3.6... python3.8
checking for python3.8... /opt/local/bin/python3.8
checking for python3.8 version... 3.8
checking for python3.8 platform... darwin
checking for python3.8 script directory... ${prefix}/lib/python3.8/site-packages
checking for python3.8 extension module directory... ${exec_prefix}/lib/python3.8/site-packages
checking whether byte ordering is bigendian... no
checking for ANSI C header files... (cached) yes
checking for exp in -lm... yes
checking for int8_t... yes
checking malloc.h usability... no
checking malloc.h presence... no
checking for malloc.h... no
Build does not require -DSUN CFLAG
Not WIN32 system
checking rpc/rpc.h usability... yes
checking rpc/rpc.h presence... yes
checking for rpc/rpc.h... yes
checking rpc/types.h usability... yes
checking rpc/types.h presence... yes
checking for rpc/types.h... yes
checking for xdrmem_create... yes
Checking for hardening enabled.... no
Use OTPS (OSU Tidal Prediction Software) location if specified with --with-otps-dir, use default otherwise
Check for PROJ library libproj
PROJ library location specified: /opt/local/lib/proj5/lib - check if libproj is there...
checking for proj_normalize_for_visualization in -lproj... no
checking for pj_init_plus in -lproj... yes
Found PROJ library libproj with PROJ4 api available
FOUND_PROJ_LIB:yes FOUND_PROJ4:yes FOUND_PROJ6:no
Check if proj header location specified on the command line
PROJ header location specified: -I/opt/local/lib/proj5/include - check if proj.h or proj_api.h is there...
Only have PROJ 4 without geodesic calculations, will not build mbsvpselect...
checking proj.h usability... yes
checking proj.h presence... yes
checking for proj.h... yes
Found PROJ 5/6 header proj.h
checking proj_api.h usability... yes
checking proj_api.h presence... yes
checking for proj_api.h... yes
Found PROJ 4 header proj_api.h
checking for nc-config... /opt/local/bin/nc-config
checking for netCDF includes... -I/opt/local/include
checking for netCDF libs... -L/opt/local/lib -lnetcdf
checking for gdal-config... /opt/local/bin/gdal-config
checking for GDAL includes... -I/opt/local/include
checking for GDAL libs... -L/opt/local/lib -lgdal
checking for gmt-config... /opt/local/bin/gmt-config
checking for GMT includes... -I/opt/local/include/gmt
checking for GMT libs... -L/opt/local/lib -lgmt
checking for 32/64-bit GMT5 installation... found 64-bit
checking for GMT plugin location... /opt/local/lib/gmt/plugins
Check for FFTW library libfftw3
FFTW library location specified: /opt/local/lib - check if libfftw3 is there...
checking for fftw_plan_dft_1d in -lfftw3... yes
Check for FFTW headers
FFTW header location specified: -I/opt/local/include - check if fftw3.h is there...
checking fftw3.h usability... yes
checking fftw3.h presence... yes
checking for fftw3.h... yes
Check for X11 libraries libX11 libXt and X11 header file X11/Intrinsic.h
checking for XtAppMainLoop in -lXt... yes
checking for XSendEvent in -lX11... yes
checking X11/Intrinsic.h usability... yes
checking X11/Intrinsic.h presence... yes
checking for X11/Intrinsic.h... yes
Found X11 libraries libX11 libXt and X11 header file X11/Intrinsic.h
Check for Motif library libXm
Motif library location specified: /opt/local/lib - check if libXm is there...
checking for XmCreatePushButton in -lXm... yes
Check for Motif headers
Motif header location specified: -I/opt/local/include - check if Xm/Xm.h is there...
checking Xm/Xm.h usability... yes
checking Xm/Xm.h presence... yes
checking for Xm/Xm.h... yes
Check for OpenGL libraries libGL libGLU and header files GL/gl.h GL/glu.h GL/glx.h
Check for OpenGL libraries libGLU libGL
Look for pkg-config OpenGL package...
checking for opengl... no
Did not find OpenGL library pkg-config package, looking in the usual places...
checking for main in -lGLU... yes
checking for main in -lGL... yes
Using pre-installed libGLU libGL...
Check for OpenGL headers
Looking for OpenGL headers in the usual places...
checking for Xm/Xm.h... (cached) yes
Using pre-installed OpenGL headers...
Check if the mbtrn tools should be built
Building mbtrn tools
Check if the mbtnav tools should be built
Building mbtnav tools (i.e. embed a TRN instance in mbtrnpp)
Check if the graphical utils should be built
Not building graphical tools
Check if programs using PCL should be built
./configure: line 21597: test: =: unary operator expected
Not building tools using PCL
Check if the unit tests should be built
Not building unit tests
Check if the GSF driver should be built
 
About to create Makefiles...
checking that generated files are newer than configure... done
configure: creating ./config.status
config.status: creating Makefile
config.status: creating src/Makefile
config.status: creating src/mbio/Makefile
config.status: creating src/surf/Makefile
config.status: creating src/bsio/Makefile
config.status: creating src/gsf/Makefile
config.status: creating src/mbaux/Makefile
config.status: creating src/utilities/Makefile
config.status: creating src/deprecated/Makefile
config.status: creating src/gmt/Makefile
config.status: creating src/macros/Makefile
config.status: creating src/mbedit/Makefile
config.status: creating src/mbnavedit/Makefile
config.status: creating src/mbvelocitytool/Makefile
config.status: creating src/mbnavadjust/Makefile
config.status: creating src/otps/Makefile
config.status: creating src/mbtrn/Makefile
config.status: creating src/mbtrnav/Makefile
config.status: creating src/mbtrnutils/Makefile
config.status: creating src/mbview/Makefile
config.status: creating src/mbgrdviz/Makefile
config.status: creating src/mbeditviz/Makefile
config.status: creating src/man/Makefile
config.status: creating src/man/man1/Makefile
config.status: creating src/man/man3/Makefile
config.status: creating src/html/Makefile
config.status: creating src/ps/Makefile
config.status: creating src/share/Makefile
config.status: creating third_party/Makefile
config.status: creating third_party/googletest/Makefile
config.status: creating third_party/googlemock/Makefile
config.status: creating test/Makefile
config.status: creating test/mbio/Makefile
config.status: creating test/utilities/Makefile
config.status: creating test/deprecated/Makefile
config.status: creating src/mbio/mb_config.h
config.status: src/mbio/mb_config.h is unchanged
config.status: executing depfiles commands
config.status: executing libtool commands

------------------------------------------------------------------------------
MB-System Configure Summary
------------------------------------------------------------------------------
MB-System will be installed in: /usr/local
Installation host:              x86_64-apple-darwin18.7.0
Building Static Libs: Yes
Building Shared Libs: Yes
Hardening Enabled: No
Byteswapping: Enabled
PROJ: Using PROJ library libproj with version 4 API (will not build mbsvpselect)
libgmt_CPPFLAGS:     -I/opt/local/include/gmt
libgmt_LIBS:         -L/opt/local/lib -R /opt/local/lib -lgmt -lpostscriptlight
libgmt_LDFLAGS:      -L/opt/local/lib
GMT PLUGIN DIR:      /opt/local/lib/gmt/plugins
libgdal_CPPFLAGS:    -I/opt/local/include
libgdal_LIBS:        -L/opt/local/lib -R /opt/local/lib -lgdal
libgdal_LDFLAGS:     -L/opt/local/lib
libnetcdf_CPPFLAGS:  -I/opt/local/include
libnetcdf_LIBS:      -L/opt/local/lib -lnetcdf
libnetcdf_LDFLAGS:   -L/opt/local/lib
libproj_CPPFLAGS:    -I/opt/local/lib/proj5/include -DUSE_PROJ4_API
libproj_LIBS:        -L/opt/local/lib/proj5/lib -R /opt/local/lib/proj5/lib -lproj
libproj_LDFLAGS:     -L/opt/local/lib/proj5/lib
FFTW Support: Enabled
Motif Support: Enabled
OpenGL Support: Enabled
Using /usr/local/OTPS2 for OSU Tidal Prediction Software
Build mbtrn tools: Enabled
Build mbtnav tools: Enabled
Build graphical tools: Disabled
Build PCL tools: Disabled
Build unit tests: Disabled
Build driver gsf: Enabled
------------------------------------------------------------------------------
Key Variables:
    prefix:                   /usr/local
    exec_prefix:              ${prefix}          ${prefix}
    datarootdir:              ${prefix}/share          ${prefix}/share
    PACKAGE_TARNAME:          mbsystem
------------------------------------------------------------------------------
Installation Locations:
    executables:              ${exec_prefix}/bin
    libraries:                ${exec_prefix}/lib
    header files:             ${prefix}/include
    data files:               ${datarootdir}/mbsystem
    man pages:                ${datarootdir}/man
    Html documentation:       ${datarootdir}/doc/${PACKAGE_TARNAME}/html
    Postscript documentation: ${datarootdir}/doc/${PACKAGE_TARNAME}/ps
------------------------------------------------------------------------------
See config.log for details of configure results
See INSTALL for further build instructions and hints
------------------------------------------------------------------------------
